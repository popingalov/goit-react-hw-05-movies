{"version":3,"sources":["service/Api.js","page/MovieDetailsPage.js"],"names":["BASE","takeTrand","a","get","axios","then","res","data","results","takeSearch","search","takeMovieForId","id","takeCredits","takeReviews","Cast","lazy","Reviews","MovieDetailsPage","navigate","useNavigate","location","useLocation","movieId","useParams","useState","movie","setMovie","helpMe","useRef","useEffect","current","state","type","onClick","style","marginBottom","label","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","to","fallback","path","element"],"mappings":"iWACMA,EACC,+BADDA,EAEC,mCAGA,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,6DACCC,EAAMC,IACTD,IADS,UACFH,EADE,uCACqCA,IAC9CK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,WAHnB,kBAIEL,GAJF,4C,sBAMA,SAAeM,EAAtB,kC,4CAAO,WAA0BC,GAA1B,eAAAR,EAAA,6DACCC,EAAMC,IACTD,IADS,UACFH,EADE,iCAC+BA,EAD/B,kBACiDU,IAC1DL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,WAHnB,kBAKEL,GALF,4C,sBAOA,SAAeQ,EAAtB,kC,4CAAO,WAA8BC,GAA9B,eAAAV,EAAA,6DACCC,EAAMC,IACTD,IADS,UACFH,EADE,kBACgBY,EADhB,oBAC8BZ,EAD9B,oBAETK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAHd,kBAKEJ,GALF,4C,sBAOA,SAAeU,EAAtB,kC,4CAAO,WAA2BD,GAA3B,eAAAV,EAAA,6DACCC,EAAMC,IACTD,IADS,UACFH,EADE,kBACgBY,EADhB,4BACsCZ,EADtC,oBAETK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAHd,kBAKEJ,GALF,4C,sBAOA,SAAeW,EAAtB,kC,4CAAO,WAA2BF,GAA3B,eAAAV,EAAA,6DACCC,EAAMC,IACTD,IADS,UACFH,EADE,kBACgBY,EADhB,4BACsCZ,EADtC,oBAETK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,WAHnB,kBAKEL,GALF,4C,sKCpBDY,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBAAM,gCAEZ,SAASE,IAAoB,IAAD,IACnCC,EAAWC,cACXC,EAAWC,cACTC,EAAYC,cAAZD,QACR,EAA0BE,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAASC,mBAEfC,qBAAU,WACRnB,YAAeY,GAASlB,KAAKsB,GAC7BC,EAAOG,QAAUV,EAASW,QACzB,CAACT,IAQJ,OACE,mCACGG,GACC,qCACE,yBAAQO,KAAK,SAASC,QAVf,WAAO,IAAD,GACnB,OAACN,QAAD,IAACA,GAAD,UAACA,EAAQG,eAAT,aAAC,EAAiBC,QAA4B,OAAnBJ,EAAOG,QAE9BZ,EAASS,EAAOG,QAAQC,OADxBb,EAAS,MAQP,UACE,cAAC,IAAD,CAAagB,MAAO,CAAEC,cAAe,KADvC,iBAEGf,QAFH,IAEGA,GAFH,UAEGA,EAAUW,aAFb,aAEG,EAAiBK,aAFpB,QAE6B,aAE7B,gCACE,qBACEC,IACEZ,EAAMa,YAAN,0CACuCb,EAAMa,aACzC,gFAENC,IAAKd,EAAMe,QAGb,gCACE,6BAAKf,EAAMe,QACX,6CAAqC,GAArBf,EAAMgB,aAAtB,OACA,0CACA,4BAAIhB,EAAMiB,WACV,wCACA,4BAAIjB,EAAMkB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,KAAO,eAG/C,gCACE,wDACA,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAE,kBAAazB,EAAb,SAAR,oBAGF,6BACE,cAAC,IAAD,CAAMyB,GAAE,kBAAazB,EAAb,YAAR,6BAIN,cAAC,WAAD,CAAU0B,SAAU,cAAC,IAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,QAAS,cAACpC,EAAD,MAC7B,cAAC,IAAD,CAAOmC,KAAK,WAAWC,QAAS,cAAClC,EAAD","file":"static/js/6.8c4ba1a1.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst BASE = {\r\n  URL: 'https://api.themoviedb.org/3',\r\n  KEY: '7c9dd50606a07df965d51fc9621e1448',\r\n};\r\n\r\nexport async function takeTrand() {\r\n  const get = axios\r\n    .get(`${BASE.URL}/trending/movie/day?api_key=${BASE.KEY}`)\r\n    .then(res => res.data.results);\r\n  return get;\r\n}\r\nexport async function takeSearch(search) {\r\n  const get = axios\r\n    .get(`${BASE.URL}/search/movie?api_key=${BASE.KEY}&query=${search}`)\r\n    .then(res => res.data.results);\r\n\r\n  return get;\r\n}\r\nexport async function takeMovieForId(id) {\r\n  const get = axios\r\n    .get(`${BASE.URL}/movie/${id}?api_key=${BASE.KEY}&language=en-US`)\r\n    .then(res => res.data);\r\n\r\n  return get;\r\n}\r\nexport async function takeCredits(id) {\r\n  const get = axios\r\n    .get(`${BASE.URL}/movie/${id}/credits?api_key=${BASE.KEY}&language=en-US`)\r\n    .then(res => res.data);\r\n\r\n  return get;\r\n}\r\nexport async function takeReviews(id) {\r\n  const get = axios\r\n    .get(`${BASE.URL}/movie/${id}/reviews?api_key=${BASE.KEY}&language=en-US`)\r\n    .then(res => res.data.results);\r\n\r\n  return get;\r\n}\r\n","import { useState, useEffect, lazy, Suspense, useRef } from 'react';\r\nimport {\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useLocation,\r\n  useNavigate,\r\n} from 'react-router-dom';\r\nimport { ImArrowLeft } from 'react-icons/im';\r\nimport { takeMovieForId } from '../service/Api';\r\nimport Spiner from '../Components/Spiner/Spiner';\r\n\r\nconst Cast = lazy(() => import('../Components/MoreInfo/Cast'));\r\nconst Reviews = lazy(() => import('../Components/MoreInfo/Reviws'));\r\n\r\nexport default function MovieDetailsPage() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const helpMe = useRef();\r\n\r\n  useEffect(() => {\r\n    takeMovieForId(movieId).then(setMovie);\r\n    helpMe.current = location.state;\r\n  }, [movieId]);\r\n\r\n  const goBack = () => {\r\n    !helpMe?.current?.state || helpMe.current === null\r\n      ? navigate('/')\r\n      : navigate(helpMe.current.state);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movie && (\r\n        <>\r\n          <button type=\"button\" onClick={goBack}>\r\n            <ImArrowLeft style={{ marginBottom: -2 }} />\r\n            {location?.state?.label ?? 'Go Back'}\r\n          </button>\r\n          <div>\r\n            <img\r\n              src={\r\n                movie.poster_path\r\n                  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n                  : 'https://cdn.pixabay.com/photo/2019/07/15/23/51/magnifying-4340698_960_720.jpg'\r\n              }\r\n              alt={movie.title}\r\n            />\r\n\r\n            <div>\r\n              <h2>{movie.title}</h2>\r\n              <p>User Score: {movie.vote_average * 10}%</p>\r\n              <h3>Overview</h3>\r\n              <p>{movie.overview}</p>\r\n              <h4>Genres</h4>\r\n              <p>{movie.genres.map(genre => genre.name + ' ')}</p>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h3>Additional information</h3>\r\n            <ul>\r\n              <li>\r\n                <Link to={`/movies/${movieId}/cast`}>Cast</Link>\r\n              </li>\r\n\r\n              <li>\r\n                <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <Suspense fallback={<Spiner />}>\r\n            <Routes>\r\n              <Route path=\"/cast\" element={<Cast />} />\r\n              <Route path=\"/reviews\" element={<Reviews />} />\r\n            </Routes>\r\n          </Suspense>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}